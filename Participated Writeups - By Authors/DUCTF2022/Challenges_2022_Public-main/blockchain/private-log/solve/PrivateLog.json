{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "logEntry",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "password",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "newHash",
          "type": "bytes32"
        }
      ],
      "name": "createLogEntry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_secretHash",
          "type": "bytes32"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "logEntries",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "secretHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "logIndex",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "logEntry",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "password",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "newHash",
          "type": "bytes32"
        }
      ],
      "name": "updateLogEntry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "logIndex",
          "type": "uint256"
        }
      ],
      "name": "viewLog",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "16": "contracts/PrivateLog/PrivateLog.sol",
    "6": "/home/x/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/proxy/utils/Initializable.sol"
  },
  "ast": {
    "absolutePath": "contracts/PrivateLog/PrivateLog.sol",
    "exportedSymbols": {
      "Initializable": [
        1222
      ],
      "PrivateLog": [
        384
      ]
    },
    "id": 385,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 259,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:16"
      },
      {
        "absolutePath": "/home/x/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/proxy/utils/Initializable.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/proxy/utils/Initializable.sol",
        "id": 260,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 385,
        "sourceUnit": 1223,
        "src": "129:91:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 261,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1222,
              "src": "246:13:16"
            },
            "id": 262,
            "nodeType": "InheritanceSpecifier",
            "src": "246:13:16"
          }
        ],
        "canonicalName": "PrivateLog",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 384,
        "linearizedBaseContracts": [
          384,
          1222
        ],
        "name": "PrivateLog",
        "nameLocation": "232:10:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "d29e6803",
            "id": 264,
            "mutability": "mutable",
            "name": "secretHash",
            "nameLocation": "282:10:16",
            "nodeType": "VariableDeclaration",
            "scope": 384,
            "src": "267:25:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 263,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "267:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "88702ee9",
            "id": 267,
            "mutability": "mutable",
            "name": "logEntries",
            "nameLocation": "314:10:16",
            "nodeType": "VariableDeclaration",
            "scope": 384,
            "src": "298:26:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 265,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "298:6:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 266,
              "nodeType": "ArrayTypeName",
              "src": "298:8:16",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 274,
              "nodeType": "Block",
              "src": "345:96:16",
              "statements": [
                {
                  "expression": {
                    "id": 272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 270,
                      "name": "secretHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 264,
                      "src": "355:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307844454144444541444445414444454144444541444445414444454144444541444445414444454144444541444445414444454144444541444445414444454144",
                      "id": 271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "368:66:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100720653802902414284285709932406411645314037931866031175238873523629937516205_by_1",
                        "typeString": "int_const 1007...(70 digits omitted)...6205"
                      },
                      "value": "0xDEADDEADDEADDEADDEADDEADDEADDEADDEADDEADDEADDEADDEADDEADDEADDEAD"
                    },
                    "src": "355:79:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 273,
                  "nodeType": "ExpressionStatement",
                  "src": "355:79:16"
                }
              ]
            },
            "id": 275,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 268,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "342:2:16"
            },
            "returnParameters": {
              "id": 269,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "345:0:16"
            },
            "scope": 384,
            "src": "331:110:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 292,
              "nodeType": "Block",
              "src": "509:140:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 283,
                          "name": "secretHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 264,
                          "src": "527:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "307844454144444541444445414444454144444541444445414444454144444541444445414444454144444541444445414444454144444541444445414444454144",
                          "id": 284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "541:66:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100720653802902414284285709932406411645314037931866031175238873523629937516205_by_1",
                            "typeString": "int_const 1007...(70 digits omitted)...6205"
                          },
                          "value": "0xDEADDEADDEADDEADDEADDEADDEADDEADDEADDEADDEADDEADDEADDEADDEADDEAD"
                        },
                        "src": "527:80:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 282,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "519:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "519:89:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 287,
                  "nodeType": "ExpressionStatement",
                  "src": "519:89:16"
                },
                {
                  "expression": {
                    "id": 290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 288,
                      "name": "secretHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 264,
                      "src": "618:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 289,
                      "name": "_secretHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 277,
                      "src": "631:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "618:24:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 291,
                  "nodeType": "ExpressionStatement",
                  "src": "618:24:16"
                }
              ]
            },
            "functionSelector": "3b663195",
            "id": 293,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 280,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 279,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1221,
                  "src": "497:11:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "497:11:16"
              }
            ],
            "name": "init",
            "nameLocation": "456:4:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 277,
                  "mutability": "mutable",
                  "name": "_secretHash",
                  "nameLocation": "469:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 293,
                  "src": "461:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 276,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "461:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "460:21:16"
            },
            "returnParameters": {
              "id": 281,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "509:0:16"
            },
            "scope": 384,
            "src": "447:202:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 316,
              "nodeType": "Block",
              "src": "715:136:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 303,
                                  "name": "password",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 295,
                                  "src": "760:8:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 301,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "743:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 302,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "743:16:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 304,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "743:26:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 300,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "733:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "733:37:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 306,
                          "name": "secretHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 264,
                          "src": "774:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "733:51:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f72726563742048617368",
                        "id": 308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "786:16:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f4eb538cc94ce80b2e503e0691ddd5234397034887c421027a0bfa62a8c929b5",
                          "typeString": "literal_string \"Incorrect Hash\""
                        },
                        "value": "Incorrect Hash"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f4eb538cc94ce80b2e503e0691ddd5234397034887c421027a0bfa62a8c929b5",
                          "typeString": "literal_string \"Incorrect Hash\""
                        }
                      ],
                      "id": 299,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "725:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "725:78:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 310,
                  "nodeType": "ExpressionStatement",
                  "src": "725:78:16"
                },
                {
                  "expression": {
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 311,
                      "name": "secretHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 264,
                      "src": "813:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 312,
                      "name": "newHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 297,
                      "src": "826:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "813:20:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 314,
                  "nodeType": "ExpressionStatement",
                  "src": "813:20:16"
                },
                {
                  "id": 315,
                  "nodeType": "PlaceholderStatement",
                  "src": "843:1:16"
                }
              ]
            },
            "id": 317,
            "name": "hasSecret",
            "nameLocation": "664:9:16",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 298,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 295,
                  "mutability": "mutable",
                  "name": "password",
                  "nameLocation": "688:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 317,
                  "src": "674:22:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 294,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "674:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 297,
                  "mutability": "mutable",
                  "name": "newHash",
                  "nameLocation": "706:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 317,
                  "src": "698:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 296,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "698:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "673:41:16"
            },
            "src": "655:196:16",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 328,
              "nodeType": "Block",
              "src": "928:44:16",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 324,
                      "name": "logEntries",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 267,
                      "src": "945:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                        "typeString": "string storage ref[] storage ref"
                      }
                    },
                    "id": 326,
                    "indexExpression": {
                      "id": 325,
                      "name": "logIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 319,
                      "src": "956:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "945:20:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 323,
                  "id": 327,
                  "nodeType": "Return",
                  "src": "938:27:16"
                }
              ]
            },
            "functionSelector": "e7a30703",
            "id": 329,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "viewLog",
            "nameLocation": "866:7:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 319,
                  "mutability": "mutable",
                  "name": "logIndex",
                  "nameLocation": "882:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 329,
                  "src": "874:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 318,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "874:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "873:18:16"
            },
            "returnParameters": {
              "id": 323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 322,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 329,
                  "src": "913:13:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 321,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "913:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "912:15:16"
            },
            "scope": 384,
            "src": "857:115:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 354,
              "nodeType": "Block",
              "src": "1104:405:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 345,
                                "name": "logEntry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 331,
                                "src": "1128:8:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 344,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1122:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 343,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "1122:5:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1122:15:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1122:22:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "3331",
                          "id": 348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1148:2:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_31_by_1",
                            "typeString": "int_const 31"
                          },
                          "value": "31"
                        },
                        "src": "1122:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6c6f6720746f6f206c6f6e67",
                        "id": 350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1152:14:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_43579d5465dc6c53e5ff855f52b6b2411847cdaeec260c48a8b77a7609b1d6ad",
                          "typeString": "literal_string \"log too long\""
                        },
                        "value": "log too long"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_43579d5465dc6c53e5ff855f52b6b2411847cdaeec260c48a8b77a7609b1d6ad",
                          "typeString": "literal_string \"log too long\""
                        }
                      ],
                      "id": 342,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1114:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1114:53:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 352,
                  "nodeType": "ExpressionStatement",
                  "src": "1114:53:16"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1198:305:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1219:4:16",
                              "type": "",
                              "value": "0x00"
                            },
                            {
                              "name": "logEntries.slot",
                              "nodeType": "YulIdentifier",
                              "src": "1225:15:16"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1212:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1212:29:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1212:29:16"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1254:36:16",
                        "value": {
                          "arguments": [
                            {
                              "name": "logEntries.slot",
                              "nodeType": "YulIdentifier",
                              "src": "1274:15:16"
                            }
                          ],
                          "functionName": {
                            "name": "sload",
                            "nodeType": "YulIdentifier",
                            "src": "1268:5:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1268:22:16"
                        },
                        "variables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "1258:6:16",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1303:32:16",
                        "value": {
                          "arguments": [
                            {
                              "name": "logEntry",
                              "nodeType": "YulIdentifier",
                              "src": "1326:8:16"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1320:5:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1320:15:16"
                        },
                        "variables": [
                          {
                            "name": "logLength",
                            "nodeType": "YulTypedName",
                            "src": "1307:9:16",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1369:4:16",
                                      "type": "",
                                      "value": "0x00"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1375:4:16",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "keccak256",
                                    "nodeType": "YulIdentifier",
                                    "src": "1359:9:16"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1359:21:16"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "1382:6:16"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1355:3:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1355:34:16"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "logEntry",
                                          "nodeType": "YulIdentifier",
                                          "src": "1404:8:16"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1414:4:16",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1400:3:16"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1400:19:16"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "1394:5:16"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1394:26:16"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "logLength",
                                      "nodeType": "YulIdentifier",
                                      "src": "1426:9:16"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1437:1:16",
                                      "type": "",
                                      "value": "2"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mul",
                                    "nodeType": "YulIdentifier",
                                    "src": "1422:3:16"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1422:17:16"
                                }
                              ],
                              "functionName": {
                                "name": "or",
                                "nodeType": "YulIdentifier",
                                "src": "1391:2:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1391:49:16"
                            }
                          ],
                          "functionName": {
                            "name": "sstore",
                            "nodeType": "YulIdentifier",
                            "src": "1348:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1348:93:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1348:93:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "logEntries.slot",
                              "nodeType": "YulIdentifier",
                              "src": "1461:15:16"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "1482:6:16"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1490:1:16",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1478:3:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1478:14:16"
                            }
                          ],
                          "functionName": {
                            "name": "sstore",
                            "nodeType": "YulIdentifier",
                            "src": "1454:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1454:39:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1454:39:16"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 267,
                      "isOffset": false,
                      "isSlot": true,
                      "src": "1225:15:16",
                      "suffix": "slot",
                      "valueSize": 1
                    },
                    {
                      "declaration": 267,
                      "isOffset": false,
                      "isSlot": true,
                      "src": "1274:15:16",
                      "suffix": "slot",
                      "valueSize": 1
                    },
                    {
                      "declaration": 267,
                      "isOffset": false,
                      "isSlot": true,
                      "src": "1461:15:16",
                      "suffix": "slot",
                      "valueSize": 1
                    },
                    {
                      "declaration": 331,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1326:8:16",
                      "valueSize": 1
                    },
                    {
                      "declaration": 331,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1404:8:16",
                      "valueSize": 1
                    }
                  ],
                  "id": 353,
                  "nodeType": "InlineAssembly",
                  "src": "1189:314:16"
                }
              ]
            },
            "functionSelector": "481908a0",
            "id": 355,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 338,
                    "name": "password",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 333,
                    "src": "1085:8:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 339,
                    "name": "newHash",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 335,
                    "src": "1095:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 340,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 337,
                  "name": "hasSecret",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 317,
                  "src": "1075:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "1075:28:16"
              }
            ],
            "name": "createLogEntry",
            "nameLocation": "988:14:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 336,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 331,
                  "mutability": "mutable",
                  "name": "logEntry",
                  "nameLocation": "1017:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 355,
                  "src": "1003:22:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 330,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1003:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 333,
                  "mutability": "mutable",
                  "name": "password",
                  "nameLocation": "1041:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 355,
                  "src": "1027:22:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 332,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1027:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 335,
                  "mutability": "mutable",
                  "name": "newHash",
                  "nameLocation": "1059:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 355,
                  "src": "1051:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 334,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1051:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1002:65:16"
            },
            "returnParameters": {
              "id": 341,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1104:0:16"
            },
            "scope": 384,
            "src": "979:530:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 382,
              "nodeType": "Block",
              "src": "1658:301:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 373,
                                "name": "logEntry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 359,
                                "src": "1682:8:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 372,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1676:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 371,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "1676:5:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 374,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1676:15:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1676:22:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "3331",
                          "id": 376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1702:2:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_31_by_1",
                            "typeString": "int_const 31"
                          },
                          "value": "31"
                        },
                        "src": "1676:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6c6f6720746f6f206c6f6e67",
                        "id": 378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1706:14:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_43579d5465dc6c53e5ff855f52b6b2411847cdaeec260c48a8b77a7609b1d6ad",
                          "typeString": "literal_string \"log too long\""
                        },
                        "value": "log too long"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_43579d5465dc6c53e5ff855f52b6b2411847cdaeec260c48a8b77a7609b1d6ad",
                          "typeString": "literal_string \"log too long\""
                        }
                      ],
                      "id": 370,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1668:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1668:53:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 380,
                  "nodeType": "ExpressionStatement",
                  "src": "1668:53:16"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1752:200:16",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1766:29:16",
                        "value": {
                          "arguments": [
                            {
                              "name": "logEntry",
                              "nodeType": "YulIdentifier",
                              "src": "1786:8:16"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1780:5:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1780:15:16"
                        },
                        "variables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "1770:6:16",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1815:4:16",
                              "type": "",
                              "value": "0x00"
                            },
                            {
                              "name": "logEntries.slot",
                              "nodeType": "YulIdentifier",
                              "src": "1821:15:16"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1808:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1808:29:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1808:29:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1871:4:16",
                                      "type": "",
                                      "value": "0x00"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1877:4:16",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "keccak256",
                                    "nodeType": "YulIdentifier",
                                    "src": "1861:9:16"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1861:21:16"
                                },
                                {
                                  "name": "logIndex",
                                  "nodeType": "YulIdentifier",
                                  "src": "1884:8:16"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1857:3:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1857:36:16"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "logEntry",
                                          "nodeType": "YulIdentifier",
                                          "src": "1908:8:16"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1918:4:16",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1904:3:16"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1904:19:16"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "1898:5:16"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1898:26:16"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "1930:6:16"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1938:1:16",
                                      "type": "",
                                      "value": "2"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mul",
                                    "nodeType": "YulIdentifier",
                                    "src": "1926:3:16"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1926:14:16"
                                }
                              ],
                              "functionName": {
                                "name": "or",
                                "nodeType": "YulIdentifier",
                                "src": "1895:2:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1895:46:16"
                            }
                          ],
                          "functionName": {
                            "name": "sstore",
                            "nodeType": "YulIdentifier",
                            "src": "1850:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1850:92:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1850:92:16"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 267,
                      "isOffset": false,
                      "isSlot": true,
                      "src": "1821:15:16",
                      "suffix": "slot",
                      "valueSize": 1
                    },
                    {
                      "declaration": 359,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1786:8:16",
                      "valueSize": 1
                    },
                    {
                      "declaration": 359,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1908:8:16",
                      "valueSize": 1
                    },
                    {
                      "declaration": 357,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1884:8:16",
                      "valueSize": 1
                    }
                  ],
                  "id": 381,
                  "nodeType": "InlineAssembly",
                  "src": "1743:209:16"
                }
              ]
            },
            "functionSelector": "dd1b54d3",
            "id": 383,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 366,
                    "name": "password",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 361,
                    "src": "1639:8:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 367,
                    "name": "newHash",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 363,
                    "src": "1649:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 368,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 365,
                  "name": "hasSecret",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 317,
                  "src": "1629:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "1629:28:16"
              }
            ],
            "name": "updateLogEntry",
            "nameLocation": "1524:14:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 357,
                  "mutability": "mutable",
                  "name": "logIndex",
                  "nameLocation": "1547:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 383,
                  "src": "1539:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 356,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1539:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 359,
                  "mutability": "mutable",
                  "name": "logEntry",
                  "nameLocation": "1571:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 383,
                  "src": "1557:22:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 358,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1557:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 361,
                  "mutability": "mutable",
                  "name": "password",
                  "nameLocation": "1595:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 383,
                  "src": "1581:22:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 360,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1581:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 363,
                  "mutability": "mutable",
                  "name": "newHash",
                  "nameLocation": "1613:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 383,
                  "src": "1605:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 362,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1605:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1538:83:16"
            },
            "returnParameters": {
              "id": 369,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1658:0:16"
            },
            "scope": 384,
            "src": "1515:444:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 385,
        "src": "223:1738:16",
        "usedErrors": []
      }
    ],
    "src": "33:1928:16"
  },
  "bytecode": "608060405234801561001057600080fd5b507fdeaddeaddeaddeaddeaddeaddeaddeaddeaddeaddeaddeaddeaddeaddeaddead6001556107c3806100446000396000f3fe6080604052600436106100555760003560e01c80633b6631951461005a578063481908a01461006f57806388702ee91461008f578063d29e6803146100c5578063dd1b54d3146100e9578063e7a3070314610109575b600080fd5b61006d61006836600461051f565b610129565b005b34801561007b57600080fd5b5061006d61008a3660046105db565b610216565b34801561009b57600080fd5b506100af6100aa36600461051f565b6102f2565b6040516100bc9190610678565b60405180910390f35b3480156100d157600080fd5b506100db60015481565b6040519081526020016100bc565b3480156100f557600080fd5b5061006d6101043660046106ab565b61039e565b34801561011557600080fd5b506100af61012436600461051f565b610470565b600054610100900460ff1680610142575060005460ff16155b6101aa5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b600054610100900460ff161580156101cc576000805461ffff19166101011790555b6001547fdeaddeaddeaddeaddeaddeaddeaddeaddeaddeaddeaddeaddeaddeaddeaddead14156101fb57600080fd5b60018290558015610212576000805461ff00191690555b5050565b81816001548260405160200161022c9190610720565b60405160208183030381529060405280519060200120146102805760405162461bcd60e51b815260206004820152600e60248201526d092dcc6dee4e4cac6e84090c2e6d60931b60448201526064016101a1565b60018190558451601f10156102c65760405162461bcd60e51b815260206004820152600c60248201526b6c6f6720746f6f206c6f6e6760a01b60448201526064016101a1565b600260005260025485516002810260208801511782602060002001555060018101600255505050505050565b6002818154811061030257600080fd5b90600052602060002001600091509050805461031d9061073c565b80601f01602080910402602001604051908101604052809291908181526020018280546103499061073c565b80156103965780601f1061036b57610100808354040283529160200191610396565b820191906000526020600020905b81548152906001019060200180831161037957829003601f168201915b505050505081565b8181600154826040516020016103b49190610720565b60405160208183030381529060405280519060200120146104085760405162461bcd60e51b815260206004820152600e60248201526d092dcc6dee4e4cac6e84090c2e6d60931b60448201526064016101a1565b60018190558451601f101561044e5760405162461bcd60e51b815260206004820152600c60248201526b6c6f6720746f6f206c6f6e6760a01b60448201526064016101a1565b8451600260005260028102602087015117876020600020015550505050505050565b60606002828154811061048557610485610777565b90600052602060002001805461049a9061073c565b80601f01602080910402602001604051908101604052809291908181526020018280546104c69061073c565b80156105135780601f106104e857610100808354040283529160200191610513565b820191906000526020600020905b8154815290600101906020018083116104f657829003601f168201915b50505050509050919050565b60006020828403121561053157600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261055f57600080fd5b813567ffffffffffffffff8082111561057a5761057a610538565b604051601f8301601f19908116603f011681019082821181831017156105a2576105a2610538565b816040528381528660208588010111156105bb57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156105f057600080fd5b833567ffffffffffffffff8082111561060857600080fd5b6106148783880161054e565b9450602086013591508082111561062a57600080fd5b506106378682870161054e565b925050604084013590509250925092565b60005b8381101561066357818101518382015260200161064b565b83811115610672576000848401525b50505050565b6020815260008251806020840152610697816040850160208701610648565b601f01601f19169190910160400192915050565b600080600080608085870312156106c157600080fd5b84359350602085013567ffffffffffffffff808211156106e057600080fd5b6106ec8883890161054e565b9450604087013591508082111561070257600080fd5b5061070f8782880161054e565b949793965093946060013593505050565b60008251610732818460208701610648565b9190910192915050565b600181811c9082168061075057607f821691505b6020821081141561077157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220fb39beee4593997e9adeb1502be0852ffaf3df4630c083d2074228e183dbe32864736f6c634300080b0033",
  "bytecodeSha1": "3e83e0504d1547547626ce8ad974503b7ea8799f",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "PrivateLog",
  "coverageMap": {
    "branches": {
      "16": {
        "PrivateLog.createLogEntry": {
          "6": [
            1122,
            1150,
            true
          ]
        },
        "PrivateLog.init": {
          "5": [
            527,
            607,
            true
          ]
        },
        "PrivateLog.updateLogEntry": {
          "7": [
            1676,
            1704,
            true
          ]
        }
      },
      "6": {
        "PrivateLog.init": {
          "8": [
            1409,
            1422,
            true
          ],
          "9": [
            1427,
            1439,
            true
          ]
        }
      }
    },
    "statements": {
      "16": {
        "PrivateLog.createLogEntry": {
          "2": [
            1114,
            1167
          ]
        },
        "PrivateLog.init": {
          "0": [
            519,
            608
          ],
          "1": [
            618,
            642
          ]
        },
        "PrivateLog.updateLogEntry": {
          "3": [
            1668,
            1721
          ]
        },
        "PrivateLog.viewLog": {
          "4": [
            938,
            965
          ]
        }
      },
      "6": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Initializable"
  ],
  "deployedBytecode": "6080604052600436106100555760003560e01c80633b6631951461005a578063481908a01461006f57806388702ee91461008f578063d29e6803146100c5578063dd1b54d3146100e9578063e7a3070314610109575b600080fd5b61006d61006836600461051f565b610129565b005b34801561007b57600080fd5b5061006d61008a3660046105db565b610216565b34801561009b57600080fd5b506100af6100aa36600461051f565b6102f2565b6040516100bc9190610678565b60405180910390f35b3480156100d157600080fd5b506100db60015481565b6040519081526020016100bc565b3480156100f557600080fd5b5061006d6101043660046106ab565b61039e565b34801561011557600080fd5b506100af61012436600461051f565b610470565b600054610100900460ff1680610142575060005460ff16155b6101aa5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b600054610100900460ff161580156101cc576000805461ffff19166101011790555b6001547fdeaddeaddeaddeaddeaddeaddeaddeaddeaddeaddeaddeaddeaddeaddeaddead14156101fb57600080fd5b60018290558015610212576000805461ff00191690555b5050565b81816001548260405160200161022c9190610720565b60405160208183030381529060405280519060200120146102805760405162461bcd60e51b815260206004820152600e60248201526d092dcc6dee4e4cac6e84090c2e6d60931b60448201526064016101a1565b60018190558451601f10156102c65760405162461bcd60e51b815260206004820152600c60248201526b6c6f6720746f6f206c6f6e6760a01b60448201526064016101a1565b600260005260025485516002810260208801511782602060002001555060018101600255505050505050565b6002818154811061030257600080fd5b90600052602060002001600091509050805461031d9061073c565b80601f01602080910402602001604051908101604052809291908181526020018280546103499061073c565b80156103965780601f1061036b57610100808354040283529160200191610396565b820191906000526020600020905b81548152906001019060200180831161037957829003601f168201915b505050505081565b8181600154826040516020016103b49190610720565b60405160208183030381529060405280519060200120146104085760405162461bcd60e51b815260206004820152600e60248201526d092dcc6dee4e4cac6e84090c2e6d60931b60448201526064016101a1565b60018190558451601f101561044e5760405162461bcd60e51b815260206004820152600c60248201526b6c6f6720746f6f206c6f6e6760a01b60448201526064016101a1565b8451600260005260028102602087015117876020600020015550505050505050565b60606002828154811061048557610485610777565b90600052602060002001805461049a9061073c565b80601f01602080910402602001604051908101604052809291908181526020018280546104c69061073c565b80156105135780601f106104e857610100808354040283529160200191610513565b820191906000526020600020905b8154815290600101906020018083116104f657829003601f168201915b50505050509050919050565b60006020828403121561053157600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261055f57600080fd5b813567ffffffffffffffff8082111561057a5761057a610538565b604051601f8301601f19908116603f011681019082821181831017156105a2576105a2610538565b816040528381528660208588010111156105bb57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156105f057600080fd5b833567ffffffffffffffff8082111561060857600080fd5b6106148783880161054e565b9450602086013591508082111561062a57600080fd5b506106378682870161054e565b925050604084013590509250925092565b60005b8381101561066357818101518382015260200161064b565b83811115610672576000848401525b50505050565b6020815260008251806020840152610697816040850160208701610648565b601f01601f19169190910160400192915050565b600080600080608085870312156106c157600080fd5b84359350602085013567ffffffffffffffff808211156106e057600080fd5b6106ec8883890161054e565b9450604087013591508082111561070257600080fd5b5061070f8782880161054e565b949793965093946060013593505050565b60008251610732818460208701610648565b9190910192915050565b600181811c9082168061075057607f821691505b6020821081141561077157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220fb39beee4593997e9adeb1502be0852ffaf3df4630c083d2074228e183dbe32864736f6c634300080b0033",
  "deployedSourceMap": "223:1738:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;447:202;;;;;;:::i;:::-;;:::i;:::-;;979:530;;;;;;;;;;-1:-1:-1;979:530:16;;;;;:::i;:::-;;:::i;298:26::-;;;;;;;;;;-1:-1:-1;298:26:16;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;267:25;;;;;;;;;;;;;;;;;;;2653::20;;;2641:2;2626:18;267:25:16;2507:177:20;1515:444:16;;;;;;;;;;-1:-1:-1;1515:444:16;;;;;:::i;:::-;;:::i;857:115::-;;;;;;;;;;-1:-1:-1;857:115:16;;;;;:::i;:::-;;:::i;447:202::-;1409:13:6;;;;;;;;:30;;-1:-1:-1;1427:12:6;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:6;;3576:2:20;1401:89:6;;;3558:21:20;3615:2;3595:18;;;3588:30;3654:34;3634:18;;;3627:62;-1:-1:-1;;;3705:18:20;;;3698:44;3759:19;;1401:89:6;;;;;;;;;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:6;;;;;1547:98;527:10:16::1;::::0;541:66:::1;527:80;;519:89;;;::::0;::::1;;618:10;:24:::0;;;1667:66:6;;;;1717:5;1701:21;;-1:-1:-1;;1701:21:6;;;1667:66;1391:348;447:202:16;:::o;979:530::-;1085:8;1095:7;774:10;;760:8;743:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;733:37;;;;;;:51;725:78;;;;-1:-1:-1;;;725:78:16;;4272:2:20;725:78:16;;;4254:21:20;4311:2;4291:18;;;4284:30;-1:-1:-1;;;4330:18:20;;;4323:44;4384:18;;725:78:16;4070:338:20;725:78:16;813:10;:20;;;1122:22;;1148:2:::1;-1:-1:-1::0;1122:28:16::1;1114:53;;;::::0;-1:-1:-1;;;1114:53:16;;4615:2:20;1114:53:16::1;::::0;::::1;4597:21:20::0;4654:2;4634:18;;;4627:30;-1:-1:-1;;;4673:18:20;;;4666:42;4725:18;;1114:53:16::1;4413:336:20::0;1114:53:16::1;1225:15;1219:4;1212:29;1274:15;1268:22;1326:8;1320:15;1437:1;1426:9;1422:17;1414:4;1404:8;1400:19;1394:26;1391:49;1382:6;1375:4;1369;1359:21;1355:34;1348:93;;1490:1;1482:6;1478:14;1461:15;1454:39;;979:530:::0;;;;;:::o;298:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1515:444::-;1639:8;1649:7;774:10;;760:8;743:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;733:37;;;;;;:51;725:78;;;;-1:-1:-1;;;725:78:16;;4272:2:20;725:78:16;;;4254:21:20;4311:2;4291:18;;;4284:30;-1:-1:-1;;;4330:18:20;;;4323:44;4384:18;;725:78:16;4070:338:20;725:78:16;813:10;:20;;;1676:22;;1702:2:::1;-1:-1:-1::0;1676:28:16::1;1668:53;;;::::0;-1:-1:-1;;;1668:53:16;;4615:2:20;1668:53:16::1;::::0;::::1;4597:21:20::0;4654:2;4634:18;;;4627:30;-1:-1:-1;;;4673:18:20;;;4666:42;4725:18;;1668:53:16::1;4413:336:20::0;1668:53:16::1;1786:8;1780:15;1821;1815:4;1808:29;1938:1;1930:6;1926:14;1918:4;1908:8;1904:19;1898:26;1895:46;1884:8;1877:4;1871;1861:21;1857:36;1850:92;;1515:444:::0;;;;;;:::o;857:115::-;913:13;945:10;956:8;945:20;;;;;;;;:::i;:::-;;;;;;;;938:27;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;857:115;;;:::o;14:180:20:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:20;;14:180;-1:-1:-1;14:180:20:o;199:127::-;260:10;255:3;251:20;248:1;241:31;291:4;288:1;281:15;315:4;312:1;305:15;331:719;374:5;427:3;420:4;412:6;408:17;404:27;394:55;;445:1;442;435:12;394:55;481:6;468:20;507:18;544:2;540;537:10;534:36;;;550:18;;:::i;:::-;625:2;619:9;593:2;679:13;;-1:-1:-1;;675:22:20;;;699:2;671:31;667:40;655:53;;;723:18;;;743:22;;;720:46;717:72;;;769:18;;:::i;:::-;809:10;805:2;798:22;844:2;836:6;829:18;890:3;883:4;878:2;870:6;866:15;862:26;859:35;856:55;;;907:1;904;897:12;856:55;971:2;964:4;956:6;952:17;945:4;937:6;933:17;920:54;1018:1;1011:4;1006:2;998:6;994:15;990:26;983:37;1038:6;1029:15;;;;;;331:719;;;;:::o;1055:611::-;1152:6;1160;1168;1221:2;1209:9;1200:7;1196:23;1192:32;1189:52;;;1237:1;1234;1227:12;1189:52;1277:9;1264:23;1306:18;1347:2;1339:6;1336:14;1333:34;;;1363:1;1360;1353:12;1333:34;1386:50;1428:7;1419:6;1408:9;1404:22;1386:50;:::i;:::-;1376:60;;1489:2;1478:9;1474:18;1461:32;1445:48;;1518:2;1508:8;1505:16;1502:36;;;1534:1;1531;1524:12;1502:36;;1557:52;1601:7;1590:8;1579:9;1575:24;1557:52;:::i;:::-;1547:62;;;1656:2;1645:9;1641:18;1628:32;1618:42;;1055:611;;;;;:::o;1856:258::-;1928:1;1938:113;1952:6;1949:1;1946:13;1938:113;;;2028:11;;;2022:18;2009:11;;;2002:39;1974:2;1967:10;1938:113;;;2069:6;2066:1;2063:13;2060:48;;;2104:1;2095:6;2090:3;2086:16;2079:27;2060:48;;1856:258;;;:::o;2119:383::-;2268:2;2257:9;2250:21;2231:4;2300:6;2294:13;2343:6;2338:2;2327:9;2323:18;2316:34;2359:66;2418:6;2413:2;2402:9;2398:18;2393:2;2385:6;2381:15;2359:66;:::i;:::-;2486:2;2465:15;-1:-1:-1;;2461:29:20;2446:45;;;;2493:2;2442:54;;2119:383;-1:-1:-1;;2119:383:20:o;2689:680::-;2795:6;2803;2811;2819;2872:3;2860:9;2851:7;2847:23;2843:33;2840:53;;;2889:1;2886;2879:12;2840:53;2925:9;2912:23;2902:33;;2986:2;2975:9;2971:18;2958:32;3009:18;3050:2;3042:6;3039:14;3036:34;;;3066:1;3063;3056:12;3036:34;3089:50;3131:7;3122:6;3111:9;3107:22;3089:50;:::i;:::-;3079:60;;3192:2;3181:9;3177:18;3164:32;3148:48;;3221:2;3211:8;3208:16;3205:36;;;3237:1;3234;3227:12;3205:36;;3260:52;3304:7;3293:8;3282:9;3278:24;3260:52;:::i;:::-;2689:680;;;;-1:-1:-1;3250:62:20;;3359:2;3344:18;3331:32;;-1:-1:-1;;;2689:680:20:o;3789:276::-;3920:3;3958:6;3952:13;3974:53;4020:6;4015:3;4008:4;4000:6;3996:17;3974:53;:::i;:::-;4043:16;;;;;3789:276;-1:-1:-1;;3789:276:20:o;4754:380::-;4833:1;4829:12;;;;4876;;;4897:61;;4951:4;4943:6;4939:17;4929:27;;4897:61;5004:2;4996:6;4993:14;4973:18;4970:38;4967:161;;;5050:10;5045:3;5041:20;5038:1;5031:31;5085:4;5082:1;5075:15;5113:4;5110:1;5103:15;4967:161;;4754:380;;;:::o;5139:127::-;5200:10;5195:3;5191:20;5188:1;5181:31;5231:4;5228:1;5221:15;5255:4;5252:1;5245:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    223,
    1961
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3B663195 EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x481908A0 EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0x88702EE9 EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0xD29E6803 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0xDD1B54D3 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0xE7A30703 EQ PUSH2 0x109 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6D PUSH2 0x68 CALLDATASIZE PUSH1 0x4 PUSH2 0x51F JUMP JUMPDEST PUSH2 0x129 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6D PUSH2 0x8A CALLDATASIZE PUSH1 0x4 PUSH2 0x5DB JUMP JUMPDEST PUSH2 0x216 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAF PUSH2 0xAA CALLDATASIZE PUSH1 0x4 PUSH2 0x51F JUMP JUMPDEST PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x678 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDB PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6D PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0x6AB JUMP JUMPDEST PUSH2 0x39E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAF PUSH2 0x124 CALLDATASIZE PUSH1 0x4 PUSH2 0x51F JUMP JUMPDEST PUSH2 0x470 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x142 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1CC JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 SLOAD PUSH32 0xDEADDEADDEADDEADDEADDEADDEADDEADDEADDEADDEADDEADDEADDEADDEADDEAD EQ ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST DUP2 DUP2 PUSH1 0x1 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x720 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x280 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x92DCC6DEE4E4CAC6E84090C2E6D PUSH1 0x93 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE DUP5 MLOAD PUSH1 0x1F LT ISZERO PUSH2 0x2C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x6C6F6720746F6F206C6F6E67 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 MSTORE PUSH1 0x2 SLOAD DUP6 MLOAD PUSH1 0x2 DUP2 MUL PUSH1 0x20 DUP9 ADD MLOAD OR DUP3 PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SSTORE POP PUSH1 0x1 DUP2 ADD PUSH1 0x2 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x31D SWAP1 PUSH2 0x73C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x349 SWAP1 PUSH2 0x73C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x396 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x396 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x379 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x1 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x720 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x408 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x92DCC6DEE4E4CAC6E84090C2E6D PUSH1 0x93 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE DUP5 MLOAD PUSH1 0x1F LT ISZERO PUSH2 0x44E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x6C6F6720746F6F206C6F6E67 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A1 JUMP JUMPDEST DUP5 MLOAD PUSH1 0x2 PUSH1 0x0 MSTORE PUSH1 0x2 DUP2 MUL PUSH1 0x20 DUP8 ADD MLOAD OR DUP8 PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x485 JUMPI PUSH2 0x485 PUSH2 0x777 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x49A SWAP1 PUSH2 0x73C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4C6 SWAP1 PUSH2 0x73C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x513 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4E8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x513 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4F6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x531 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x55F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x57A JUMPI PUSH2 0x57A PUSH2 0x538 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x5A2 JUMPI PUSH2 0x5A2 PUSH2 0x538 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x5BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x608 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x614 DUP8 DUP4 DUP9 ADD PUSH2 0x54E JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x62A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x637 DUP7 DUP3 DUP8 ADD PUSH2 0x54E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x663 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x64B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x672 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x697 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x648 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x6C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x6E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6EC DUP9 DUP4 DUP10 ADD PUSH2 0x54E JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x702 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x70F DUP8 DUP3 DUP9 ADD PUSH2 0x54E JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x732 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x648 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x750 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x771 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB CODECOPY 0xBE 0xEE GASLIMIT SWAP4 SWAP10 PUSH31 0x9ADEB1502BE0852FFAF3DF4630C083D2074228E183DBE32864736F6C634300 ADDMOD SIGNEXTEND STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        223,
        1961
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "8": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "LT",
      "path": "16"
    },
    "9": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x55"
    },
    "12": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "13": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "16": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "SHR",
      "path": "16"
    },
    "19": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "DUP1",
      "path": "16"
    },
    "20": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x3B663195"
    },
    "25": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "EQ",
      "path": "16"
    },
    "26": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5A"
    },
    "29": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "30": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "DUP1",
      "path": "16"
    },
    "31": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x481908A0"
    },
    "36": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "EQ",
      "path": "16"
    },
    "37": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6F"
    },
    "40": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "41": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "DUP1",
      "path": "16"
    },
    "42": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x88702EE9"
    },
    "47": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "EQ",
      "path": "16"
    },
    "48": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8F"
    },
    "51": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "52": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "DUP1",
      "path": "16"
    },
    "53": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xD29E6803"
    },
    "58": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "EQ",
      "path": "16"
    },
    "59": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC5"
    },
    "62": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "63": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "DUP1",
      "path": "16"
    },
    "64": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDD1B54D3"
    },
    "69": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "EQ",
      "path": "16"
    },
    "70": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE9"
    },
    "73": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "74": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "DUP1",
      "path": "16"
    },
    "75": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xE7A30703"
    },
    "80": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "EQ",
      "path": "16"
    },
    "81": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x109"
    },
    "84": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "85": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "86": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "88": {
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "DUP1",
      "path": "16"
    },
    "89": {
      "first_revert": true,
      "fn": null,
      "offset": [
        223,
        1961
      ],
      "op": "REVERT",
      "path": "16"
    },
    "90": {
      "fn": "PrivateLog.init",
      "offset": [
        447,
        649
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "91": {
      "fn": "PrivateLog.init",
      "offset": [
        447,
        649
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6D"
    },
    "94": {
      "fn": "PrivateLog.init",
      "offset": [
        447,
        649
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x68"
    },
    "97": {
      "fn": "PrivateLog.init",
      "offset": [
        447,
        649
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "98": {
      "fn": "PrivateLog.init",
      "offset": [
        447,
        649
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "100": {
      "fn": "PrivateLog.init",
      "offset": [
        447,
        649
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x51F"
    },
    "103": {
      "fn": "PrivateLog.init",
      "jump": "i",
      "offset": [
        447,
        649
      ],
      "op": "JUMP",
      "path": "16"
    },
    "104": {
      "fn": "PrivateLog.init",
      "offset": [
        447,
        649
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "105": {
      "fn": "PrivateLog.init",
      "offset": [
        447,
        649
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x129"
    },
    "108": {
      "fn": "PrivateLog.init",
      "jump": "i",
      "offset": [
        447,
        649
      ],
      "op": "JUMP",
      "path": "16"
    },
    "109": {
      "fn": "PrivateLog.init",
      "offset": [
        447,
        649
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "110": {
      "fn": "PrivateLog.init",
      "offset": [
        447,
        649
      ],
      "op": "STOP",
      "path": "16"
    },
    "111": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        979,
        1509
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "112": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        979,
        1509
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "113": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        979,
        1509
      ],
      "op": "DUP1",
      "path": "16"
    },
    "114": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        979,
        1509
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "115": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        979,
        1509
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7B"
    },
    "118": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        979,
        1509
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "119": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        979,
        1509
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "121": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        979,
        1509
      ],
      "op": "DUP1",
      "path": "16"
    },
    "122": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        979,
        1509
      ],
      "op": "REVERT",
      "path": "16"
    },
    "123": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        979,
        1509
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "124": {
      "op": "POP"
    },
    "125": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        979,
        1509
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6D"
    },
    "128": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        979,
        1509
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8A"
    },
    "131": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        979,
        1509
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "132": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        979,
        1509
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "134": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        979,
        1509
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5DB"
    },
    "137": {
      "fn": "PrivateLog.createLogEntry",
      "jump": "i",
      "offset": [
        979,
        1509
      ],
      "op": "JUMP",
      "path": "16"
    },
    "138": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        979,
        1509
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "139": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        979,
        1509
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x216"
    },
    "142": {
      "fn": "PrivateLog.createLogEntry",
      "jump": "i",
      "offset": [
        979,
        1509
      ],
      "op": "JUMP",
      "path": "16"
    },
    "143": {
      "offset": [
        298,
        324
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "144": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "145": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "DUP1",
      "path": "16"
    },
    "146": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "147": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9B"
    },
    "150": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "151": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "153": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "DUP1",
      "path": "16"
    },
    "154": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "REVERT",
      "path": "16"
    },
    "155": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "156": {
      "op": "POP"
    },
    "157": {
      "offset": [
        298,
        324
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xAF"
    },
    "160": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xAA"
    },
    "163": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "164": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "166": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x51F"
    },
    "169": {
      "fn": "PrivateLog.createLogEntry",
      "jump": "i",
      "offset": [
        298,
        324
      ],
      "op": "JUMP",
      "path": "16"
    },
    "170": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "171": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2F2"
    },
    "174": {
      "fn": "PrivateLog.createLogEntry",
      "jump": "i",
      "offset": [
        298,
        324
      ],
      "op": "JUMP",
      "path": "16"
    },
    "175": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "176": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "178": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "179": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBC"
    },
    "182": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "183": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "184": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x678"
    },
    "187": {
      "fn": "PrivateLog.createLogEntry",
      "jump": "i",
      "offset": [
        298,
        324
      ],
      "op": "JUMP",
      "path": "16"
    },
    "188": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "189": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "191": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "192": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "DUP1",
      "path": "16"
    },
    "193": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "194": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "SUB",
      "path": "16"
    },
    "195": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "196": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "RETURN",
      "path": "16"
    },
    "197": {
      "offset": [
        267,
        292
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "198": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        267,
        292
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "199": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        267,
        292
      ],
      "op": "DUP1",
      "path": "16"
    },
    "200": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        267,
        292
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "201": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        267,
        292
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD1"
    },
    "204": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        267,
        292
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "205": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        267,
        292
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "207": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        267,
        292
      ],
      "op": "DUP1",
      "path": "16"
    },
    "208": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        267,
        292
      ],
      "op": "REVERT",
      "path": "16"
    },
    "209": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        267,
        292
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "210": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        267,
        292
      ],
      "op": "POP",
      "path": "16"
    },
    "211": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        267,
        292
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDB"
    },
    "214": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        267,
        292
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "216": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        267,
        292
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "217": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        267,
        292
      ],
      "op": "DUP2",
      "path": "16"
    },
    "218": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        267,
        292
      ],
      "op": "JUMP",
      "path": "16"
    },
    "219": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        267,
        292
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "220": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        267,
        292
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "222": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        267,
        292
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "223": {
      "op": "SWAP1"
    },
    "224": {
      "op": "DUP2"
    },
    "225": {
      "op": "MSTORE"
    },
    "226": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "228": {
      "op": "ADD"
    },
    "229": {
      "offset": [
        267,
        292
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBC"
    },
    "232": {
      "op": "JUMP"
    },
    "233": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1515,
        1959
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "234": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1515,
        1959
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "235": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1515,
        1959
      ],
      "op": "DUP1",
      "path": "16"
    },
    "236": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1515,
        1959
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "237": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1515,
        1959
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF5"
    },
    "240": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1515,
        1959
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "241": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1515,
        1959
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "243": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1515,
        1959
      ],
      "op": "DUP1",
      "path": "16"
    },
    "244": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1515,
        1959
      ],
      "op": "REVERT",
      "path": "16"
    },
    "245": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1515,
        1959
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "246": {
      "op": "POP"
    },
    "247": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1515,
        1959
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6D"
    },
    "250": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1515,
        1959
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x104"
    },
    "253": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1515,
        1959
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "254": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1515,
        1959
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "256": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1515,
        1959
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6AB"
    },
    "259": {
      "fn": "PrivateLog.updateLogEntry",
      "jump": "i",
      "offset": [
        1515,
        1959
      ],
      "op": "JUMP",
      "path": "16"
    },
    "260": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1515,
        1959
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "261": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1515,
        1959
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x39E"
    },
    "264": {
      "fn": "PrivateLog.updateLogEntry",
      "jump": "i",
      "offset": [
        1515,
        1959
      ],
      "op": "JUMP",
      "path": "16"
    },
    "265": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        857,
        972
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "266": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        857,
        972
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "267": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        857,
        972
      ],
      "op": "DUP1",
      "path": "16"
    },
    "268": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        857,
        972
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "269": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        857,
        972
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x115"
    },
    "272": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        857,
        972
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "273": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        857,
        972
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "275": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        857,
        972
      ],
      "op": "DUP1",
      "path": "16"
    },
    "276": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        857,
        972
      ],
      "op": "REVERT",
      "path": "16"
    },
    "277": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        857,
        972
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "278": {
      "op": "POP"
    },
    "279": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        857,
        972
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xAF"
    },
    "282": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        857,
        972
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x124"
    },
    "285": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        857,
        972
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "286": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        857,
        972
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "288": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        857,
        972
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x51F"
    },
    "291": {
      "fn": "PrivateLog.viewLog",
      "jump": "i",
      "offset": [
        857,
        972
      ],
      "op": "JUMP",
      "path": "16"
    },
    "292": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        857,
        972
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "293": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        857,
        972
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x470"
    },
    "296": {
      "fn": "PrivateLog.viewLog",
      "jump": "i",
      "offset": [
        857,
        972
      ],
      "op": "JUMP",
      "path": "16"
    },
    "297": {
      "fn": "PrivateLog.init",
      "offset": [
        447,
        649
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "298": {
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "300": {
      "fn": "PrivateLog.init",
      "offset": [
        1409,
        1422
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "301": {
      "fn": "PrivateLog.init",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "304": {
      "fn": "PrivateLog.init",
      "offset": [
        1409,
        1422
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "305": {
      "fn": "PrivateLog.init",
      "offset": [
        1409,
        1422
      ],
      "op": "DIV",
      "path": "6"
    },
    "306": {
      "fn": "PrivateLog.init",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "308": {
      "fn": "PrivateLog.init",
      "offset": [
        1409,
        1422
      ],
      "op": "AND",
      "path": "6"
    },
    "309": {
      "branch": 8,
      "fn": "PrivateLog.init",
      "offset": [
        1409,
        1422
      ],
      "op": "DUP1",
      "path": "6"
    },
    "310": {
      "offset": [
        1409,
        1439
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x142"
    },
    "313": {
      "branch": 8,
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "314": {
      "op": "POP"
    },
    "315": {
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "317": {
      "fn": "PrivateLog.init",
      "offset": [
        1427,
        1439
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "318": {
      "fn": "PrivateLog.init",
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "320": {
      "branch": 9,
      "fn": "PrivateLog.init",
      "offset": [
        1427,
        1439
      ],
      "op": "AND",
      "path": "6"
    },
    "321": {
      "offset": [
        1426,
        1439
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "322": {
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "323": {
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1AA"
    },
    "326": {
      "branch": 9,
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "327": {
      "fn": "PrivateLog.init",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "329": {
      "fn": "PrivateLog.init",
      "offset": [
        1401,
        1490
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "330": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "334": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "336": {
      "op": "SHL"
    },
    "337": {
      "offset": [
        1401,
        1490
      ],
      "op": "DUP2",
      "path": "6"
    },
    "338": {
      "fn": "PrivateLog.init",
      "offset": [
        1401,
        1490
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "339": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "341": {
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "343": {
      "fn": "PrivateLog.init",
      "offset": [
        1401,
        1490
      ],
      "op": "DUP3",
      "path": "6"
    },
    "344": {
      "fn": "PrivateLog.init",
      "offset": [
        1401,
        1490
      ],
      "op": "ADD",
      "path": "6"
    },
    "345": {
      "op": "MSTORE"
    },
    "346": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "348": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "350": {
      "op": "DUP3"
    },
    "351": {
      "op": "ADD"
    },
    "352": {
      "op": "MSTORE"
    },
    "353": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
    },
    "386": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "388": {
      "op": "DUP3"
    },
    "389": {
      "op": "ADD"
    },
    "390": {
      "op": "MSTORE"
    },
    "391": {
      "op": "PUSH14",
      "value": "0x191E481A5B9A5D1A585B1A5E9959"
    },
    "406": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "408": {
      "op": "SHL"
    },
    "409": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "411": {
      "op": "DUP3"
    },
    "412": {
      "op": "ADD"
    },
    "413": {
      "op": "MSTORE"
    },
    "414": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "416": {
      "op": "ADD"
    },
    "417": {
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "418": {
      "fn": "PrivateLog.init",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "420": {
      "fn": "PrivateLog.init",
      "offset": [
        1401,
        1490
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "421": {
      "fn": "PrivateLog.init",
      "offset": [
        1401,
        1490
      ],
      "op": "DUP1",
      "path": "6"
    },
    "422": {
      "fn": "PrivateLog.init",
      "offset": [
        1401,
        1490
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "423": {
      "fn": "PrivateLog.init",
      "offset": [
        1401,
        1490
      ],
      "op": "SUB",
      "path": "6"
    },
    "424": {
      "fn": "PrivateLog.init",
      "offset": [
        1401,
        1490
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "425": {
      "fn": "PrivateLog.init",
      "offset": [
        1401,
        1490
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "6"
    },
    "426": {
      "fn": "PrivateLog.init",
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "427": {
      "offset": [
        1501,
        1520
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "429": {
      "offset": [
        1524,
        1537
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "430": {
      "fn": "PrivateLog.init",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "433": {
      "fn": "PrivateLog.init",
      "offset": [
        1524,
        1537
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "434": {
      "fn": "PrivateLog.init",
      "offset": [
        1524,
        1537
      ],
      "op": "DIV",
      "path": "6"
    },
    "435": {
      "fn": "PrivateLog.init",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "437": {
      "fn": "PrivateLog.init",
      "offset": [
        1524,
        1537
      ],
      "op": "AND",
      "path": "6"
    },
    "438": {
      "offset": [
        1523,
        1537
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "439": {
      "offset": [
        1547,
        1645
      ],
      "op": "DUP1",
      "path": "6"
    },
    "440": {
      "fn": "PrivateLog.init",
      "offset": [
        1547,
        1645
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "441": {
      "fn": "PrivateLog.init",
      "offset": [
        1547,
        1645
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1CC"
    },
    "444": {
      "fn": "PrivateLog.init",
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "445": {
      "offset": [
        1581,
        1594
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "447": {
      "offset": [
        1581,
        1601
      ],
      "op": "DUP1",
      "path": "6"
    },
    "448": {
      "fn": "PrivateLog.init",
      "offset": [
        1581,
        1601
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "449": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "452": {
      "op": "NOT"
    },
    "453": {
      "offset": [
        1615,
        1634
      ],
      "op": "AND",
      "path": "6"
    },
    "454": {
      "fn": "PrivateLog.init",
      "offset": [
        1615,
        1634
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x101"
    },
    "457": {
      "fn": "PrivateLog.init",
      "offset": [
        1615,
        1634
      ],
      "op": "OR",
      "path": "6"
    },
    "458": {
      "fn": "PrivateLog.init",
      "offset": [
        1615,
        1634
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "459": {
      "fn": "PrivateLog.init",
      "offset": [
        1615,
        1634
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "460": {
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "461": {
      "fn": "PrivateLog.init",
      "offset": [
        527,
        537
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 0,
      "value": "0x1"
    },
    "463": {
      "fn": "PrivateLog.init",
      "offset": [
        527,
        537
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "464": {
      "fn": "PrivateLog.init",
      "offset": [
        541,
        607
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0xDEADDEADDEADDEADDEADDEADDEADDEADDEADDEADDEADDEADDEADDEADDEADDEAD"
    },
    "497": {
      "fn": "PrivateLog.init",
      "offset": [
        527,
        607
      ],
      "op": "EQ",
      "path": "16"
    },
    "498": {
      "branch": 5,
      "fn": "PrivateLog.init",
      "offset": [
        527,
        607
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "499": {
      "fn": "PrivateLog.init",
      "offset": [
        519,
        608
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1FB"
    },
    "502": {
      "branch": 5,
      "fn": "PrivateLog.init",
      "offset": [
        519,
        608
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "503": {
      "fn": "PrivateLog.init",
      "offset": [
        519,
        608
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "505": {
      "fn": "PrivateLog.init",
      "offset": [
        519,
        608
      ],
      "op": "DUP1",
      "path": "16"
    },
    "506": {
      "fn": "PrivateLog.init",
      "offset": [
        519,
        608
      ],
      "op": "REVERT",
      "path": "16"
    },
    "507": {
      "fn": "PrivateLog.init",
      "offset": [
        519,
        608
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "508": {
      "fn": "PrivateLog.init",
      "offset": [
        618,
        628
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 1,
      "value": "0x1"
    },
    "510": {
      "fn": "PrivateLog.init",
      "offset": [
        618,
        642
      ],
      "op": "DUP3",
      "path": "16"
    },
    "511": {
      "fn": "PrivateLog.init",
      "offset": [
        618,
        642
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "512": {
      "fn": "PrivateLog.init",
      "offset": [
        618,
        642
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "513": {
      "offset": [
        1667,
        1733
      ],
      "op": "DUP1",
      "path": "6"
    },
    "514": {
      "fn": "PrivateLog.init",
      "offset": [
        1667,
        1733
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "515": {
      "fn": "PrivateLog.init",
      "offset": [
        1667,
        1733
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x212"
    },
    "518": {
      "fn": "PrivateLog.init",
      "offset": [
        1667,
        1733
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "519": {
      "offset": [
        1717,
        1722
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "521": {
      "offset": [
        1701,
        1722
      ],
      "op": "DUP1",
      "path": "6"
    },
    "522": {
      "fn": "PrivateLog.init",
      "offset": [
        1701,
        1722
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "523": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "526": {
      "op": "NOT"
    },
    "527": {
      "offset": [
        1701,
        1722
      ],
      "op": "AND",
      "path": "6"
    },
    "528": {
      "fn": "PrivateLog.init",
      "offset": [
        1701,
        1722
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "529": {
      "fn": "PrivateLog.init",
      "offset": [
        1701,
        1722
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "530": {
      "offset": [
        1667,
        1733
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "531": {
      "offset": [
        1391,
        1739
      ],
      "op": "POP",
      "path": "6"
    },
    "532": {
      "fn": "PrivateLog.init",
      "offset": [
        447,
        649
      ],
      "op": "POP",
      "path": "16"
    },
    "533": {
      "fn": "PrivateLog.init",
      "jump": "o",
      "offset": [
        447,
        649
      ],
      "op": "JUMP",
      "path": "16"
    },
    "534": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        979,
        1509
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "535": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1085,
        1093
      ],
      "op": "DUP2",
      "path": "16"
    },
    "536": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1095,
        1102
      ],
      "op": "DUP2",
      "path": "16"
    },
    "537": {
      "offset": [
        774,
        784
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "539": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        774,
        784
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "540": {
      "offset": [
        760,
        768
      ],
      "op": "DUP3",
      "path": "16"
    },
    "541": {
      "offset": [
        743,
        769
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "543": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        743,
        769
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "544": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        743,
        769
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "546": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        743,
        769
      ],
      "op": "ADD",
      "path": "16"
    },
    "547": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        743,
        769
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22C"
    },
    "550": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        743,
        769
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "551": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        743,
        769
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "552": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        743,
        769
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x720"
    },
    "555": {
      "fn": "PrivateLog.createLogEntry",
      "jump": "i",
      "offset": [
        743,
        769
      ],
      "op": "JUMP",
      "path": "16"
    },
    "556": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        743,
        769
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "557": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        743,
        769
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "559": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        743,
        769
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "560": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        743,
        769
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "562": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        743,
        769
      ],
      "op": "DUP2",
      "path": "16"
    },
    "563": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        743,
        769
      ],
      "op": "DUP4",
      "path": "16"
    },
    "564": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        743,
        769
      ],
      "op": "SUB",
      "path": "16"
    },
    "565": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        743,
        769
      ],
      "op": "SUB",
      "path": "16"
    },
    "566": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        743,
        769
      ],
      "op": "DUP2",
      "path": "16"
    },
    "567": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        743,
        769
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "568": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        743,
        769
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "569": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        743,
        769
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "571": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        743,
        769
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "572": {
      "offset": [
        733,
        770
      ],
      "op": "DUP1",
      "path": "16"
    },
    "573": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        733,
        770
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "574": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        733,
        770
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "575": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        733,
        770
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "577": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        733,
        770
      ],
      "op": "ADD",
      "path": "16"
    },
    "578": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        733,
        770
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "579": {
      "offset": [
        733,
        784
      ],
      "op": "EQ",
      "path": "16"
    },
    "580": {
      "offset": [
        725,
        803
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x280"
    },
    "583": {
      "offset": [
        725,
        803
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "584": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        725,
        803
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "586": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        725,
        803
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "587": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "591": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "593": {
      "op": "SHL"
    },
    "594": {
      "offset": [
        725,
        803
      ],
      "op": "DUP2",
      "path": "16"
    },
    "595": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        725,
        803
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "596": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "598": {
      "offset": [
        725,
        803
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "600": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        725,
        803
      ],
      "op": "DUP3",
      "path": "16"
    },
    "601": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        725,
        803
      ],
      "op": "ADD",
      "path": "16"
    },
    "602": {
      "op": "MSTORE"
    },
    "603": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "605": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "607": {
      "op": "DUP3"
    },
    "608": {
      "op": "ADD"
    },
    "609": {
      "op": "MSTORE"
    },
    "610": {
      "op": "PUSH14",
      "value": "0x92DCC6DEE4E4CAC6E84090C2E6D"
    },
    "625": {
      "op": "PUSH1",
      "value": "0x93"
    },
    "627": {
      "op": "SHL"
    },
    "628": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "630": {
      "op": "DUP3"
    },
    "631": {
      "op": "ADD"
    },
    "632": {
      "op": "MSTORE"
    },
    "633": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "635": {
      "op": "ADD"
    },
    "636": {
      "offset": [
        725,
        803
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A1"
    },
    "639": {
      "op": "JUMP"
    },
    "640": {
      "offset": [
        725,
        803
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "641": {
      "offset": [
        813,
        823
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "643": {
      "offset": [
        813,
        833
      ],
      "op": "DUP2",
      "path": "16"
    },
    "644": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        813,
        833
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "645": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        813,
        833
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "646": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1122,
        1144
      ],
      "op": "DUP5",
      "path": "16",
      "statement": 2
    },
    "647": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1122,
        1144
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "648": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1148,
        1150
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "650": {
      "op": "LT"
    },
    "651": {
      "branch": 6,
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1122,
        1150
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "652": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1114,
        1167
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2C6"
    },
    "655": {
      "branch": 6,
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1114,
        1167
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "656": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1114,
        1167
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "658": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1114,
        1167
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "659": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "663": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "665": {
      "op": "SHL"
    },
    "666": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1114,
        1167
      ],
      "op": "DUP2",
      "path": "16"
    },
    "667": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1114,
        1167
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "668": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "670": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1114,
        1167
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "672": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1114,
        1167
      ],
      "op": "DUP3",
      "path": "16"
    },
    "673": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1114,
        1167
      ],
      "op": "ADD",
      "path": "16"
    },
    "674": {
      "op": "MSTORE"
    },
    "675": {
      "op": "PUSH1",
      "value": "0xC"
    },
    "677": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "679": {
      "op": "DUP3"
    },
    "680": {
      "op": "ADD"
    },
    "681": {
      "op": "MSTORE"
    },
    "682": {
      "op": "PUSH12",
      "value": "0x6C6F6720746F6F206C6F6E67"
    },
    "695": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "697": {
      "op": "SHL"
    },
    "698": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "700": {
      "op": "DUP3"
    },
    "701": {
      "op": "ADD"
    },
    "702": {
      "op": "MSTORE"
    },
    "703": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "705": {
      "op": "ADD"
    },
    "706": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1114,
        1167
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A1"
    },
    "709": {
      "op": "JUMP"
    },
    "710": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1114,
        1167
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "711": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1225,
        1240
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "713": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1219,
        1223
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "715": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1212,
        1241
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "716": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1274,
        1289
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "718": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1268,
        1290
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "719": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1326,
        1334
      ],
      "op": "DUP6",
      "path": "16"
    },
    "720": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1320,
        1335
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "721": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1437,
        1438
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "723": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1426,
        1435
      ],
      "op": "DUP2",
      "path": "16"
    },
    "724": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1422,
        1439
      ],
      "op": "MUL",
      "path": "16"
    },
    "725": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1414,
        1418
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "727": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1404,
        1412
      ],
      "op": "DUP9",
      "path": "16"
    },
    "728": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1400,
        1419
      ],
      "op": "ADD",
      "path": "16"
    },
    "729": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1394,
        1420
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "730": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1391,
        1440
      ],
      "op": "OR",
      "path": "16"
    },
    "731": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1382,
        1388
      ],
      "op": "DUP3",
      "path": "16"
    },
    "732": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1375,
        1379
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "734": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1369,
        1373
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "736": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1359,
        1380
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "737": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1355,
        1389
      ],
      "op": "ADD",
      "path": "16"
    },
    "738": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1348,
        1441
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "739": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1348,
        1441
      ],
      "op": "POP",
      "path": "16"
    },
    "740": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1490,
        1491
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "742": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1482,
        1488
      ],
      "op": "DUP2",
      "path": "16"
    },
    "743": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1478,
        1492
      ],
      "op": "ADD",
      "path": "16"
    },
    "744": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1461,
        1476
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "746": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1454,
        1493
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "747": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        1454,
        1493
      ],
      "op": "POP",
      "path": "16"
    },
    "748": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        979,
        1509
      ],
      "op": "POP",
      "path": "16"
    },
    "749": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        979,
        1509
      ],
      "op": "POP",
      "path": "16"
    },
    "750": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        979,
        1509
      ],
      "op": "POP",
      "path": "16"
    },
    "751": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        979,
        1509
      ],
      "op": "POP",
      "path": "16"
    },
    "752": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        979,
        1509
      ],
      "op": "POP",
      "path": "16"
    },
    "753": {
      "fn": "PrivateLog.createLogEntry",
      "jump": "o",
      "offset": [
        979,
        1509
      ],
      "op": "JUMP",
      "path": "16"
    },
    "754": {
      "offset": [
        298,
        324
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "755": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "757": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "DUP2",
      "path": "16"
    },
    "758": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "DUP2",
      "path": "16"
    },
    "759": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "760": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "DUP2",
      "path": "16"
    },
    "761": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "LT",
      "path": "16"
    },
    "762": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x302"
    },
    "765": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "766": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "768": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "DUP1",
      "path": "16"
    },
    "769": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "REVERT",
      "path": "16"
    },
    "770": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "771": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "772": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "774": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "775": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "777": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "779": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "780": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "ADD",
      "path": "16"
    },
    "781": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "783": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "784": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "POP",
      "path": "16"
    },
    "785": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "786": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "POP",
      "path": "16"
    },
    "787": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "DUP1",
      "path": "16"
    },
    "788": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "789": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x31D"
    },
    "792": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "793": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x73C"
    },
    "796": {
      "fn": "PrivateLog.createLogEntry",
      "jump": "i",
      "offset": [
        298,
        324
      ],
      "op": "JUMP",
      "path": "16"
    },
    "797": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "798": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "DUP1",
      "path": "16"
    },
    "799": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "801": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "ADD",
      "path": "16"
    },
    "802": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "804": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "DUP1",
      "path": "16"
    },
    "805": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "806": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "DIV",
      "path": "16"
    },
    "807": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "MUL",
      "path": "16"
    },
    "808": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "810": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "ADD",
      "path": "16"
    },
    "811": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "813": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "814": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "815": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "DUP2",
      "path": "16"
    },
    "816": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "ADD",
      "path": "16"
    },
    "817": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "819": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "820": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "DUP1",
      "path": "16"
    },
    "821": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "822": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "823": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "824": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "DUP2",
      "path": "16"
    },
    "825": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "DUP2",
      "path": "16"
    },
    "826": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "827": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "829": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "ADD",
      "path": "16"
    },
    "830": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "DUP3",
      "path": "16"
    },
    "831": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "DUP1",
      "path": "16"
    },
    "832": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "833": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x349"
    },
    "836": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "837": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x73C"
    },
    "840": {
      "fn": "PrivateLog.createLogEntry",
      "jump": "i",
      "offset": [
        298,
        324
      ],
      "op": "JUMP",
      "path": "16"
    },
    "841": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "842": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "DUP1",
      "path": "16"
    },
    "843": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "844": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x396"
    },
    "847": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "848": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "DUP1",
      "path": "16"
    },
    "849": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "851": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "LT",
      "path": "16"
    },
    "852": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x36B"
    },
    "855": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "856": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "859": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "DUP1",
      "path": "16"
    },
    "860": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "DUP4",
      "path": "16"
    },
    "861": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "862": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "DIV",
      "path": "16"
    },
    "863": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "MUL",
      "path": "16"
    },
    "864": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "DUP4",
      "path": "16"
    },
    "865": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "866": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "867": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "869": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "ADD",
      "path": "16"
    },
    "870": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "871": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x396"
    },
    "874": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "JUMP",
      "path": "16"
    },
    "875": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "876": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "DUP3",
      "path": "16"
    },
    "877": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "ADD",
      "path": "16"
    },
    "878": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "879": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "880": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "882": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "883": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "885": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "887": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "888": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "889": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "890": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "DUP2",
      "path": "16"
    },
    "891": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "892": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "DUP2",
      "path": "16"
    },
    "893": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "894": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "895": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "897": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "ADD",
      "path": "16"
    },
    "898": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "899": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "901": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "ADD",
      "path": "16"
    },
    "902": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "DUP1",
      "path": "16"
    },
    "903": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "DUP4",
      "path": "16"
    },
    "904": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "GT",
      "path": "16"
    },
    "905": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x379"
    },
    "908": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "909": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "DUP3",
      "path": "16"
    },
    "910": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "911": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "SUB",
      "path": "16"
    },
    "912": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "914": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "AND",
      "path": "16"
    },
    "915": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "DUP3",
      "path": "16"
    },
    "916": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "ADD",
      "path": "16"
    },
    "917": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "918": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "919": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "POP",
      "path": "16"
    },
    "920": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "POP",
      "path": "16"
    },
    "921": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "POP",
      "path": "16"
    },
    "922": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "POP",
      "path": "16"
    },
    "923": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "POP",
      "path": "16"
    },
    "924": {
      "fn": "PrivateLog.createLogEntry",
      "offset": [
        298,
        324
      ],
      "op": "DUP2",
      "path": "16"
    },
    "925": {
      "fn": "PrivateLog.createLogEntry",
      "jump": "o",
      "offset": [
        298,
        324
      ],
      "op": "JUMP",
      "path": "16"
    },
    "926": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1515,
        1959
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "927": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1639,
        1647
      ],
      "op": "DUP2",
      "path": "16"
    },
    "928": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1649,
        1656
      ],
      "op": "DUP2",
      "path": "16"
    },
    "929": {
      "offset": [
        774,
        784
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "931": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        774,
        784
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "932": {
      "offset": [
        760,
        768
      ],
      "op": "DUP3",
      "path": "16"
    },
    "933": {
      "offset": [
        743,
        769
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "935": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        743,
        769
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "936": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        743,
        769
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "938": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        743,
        769
      ],
      "op": "ADD",
      "path": "16"
    },
    "939": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        743,
        769
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3B4"
    },
    "942": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        743,
        769
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "943": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        743,
        769
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "944": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        743,
        769
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x720"
    },
    "947": {
      "fn": "PrivateLog.updateLogEntry",
      "jump": "i",
      "offset": [
        743,
        769
      ],
      "op": "JUMP",
      "path": "16"
    },
    "948": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        743,
        769
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "949": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        743,
        769
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "951": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        743,
        769
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "952": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        743,
        769
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "954": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        743,
        769
      ],
      "op": "DUP2",
      "path": "16"
    },
    "955": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        743,
        769
      ],
      "op": "DUP4",
      "path": "16"
    },
    "956": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        743,
        769
      ],
      "op": "SUB",
      "path": "16"
    },
    "957": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        743,
        769
      ],
      "op": "SUB",
      "path": "16"
    },
    "958": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        743,
        769
      ],
      "op": "DUP2",
      "path": "16"
    },
    "959": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        743,
        769
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "960": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        743,
        769
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "961": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        743,
        769
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "963": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        743,
        769
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "964": {
      "offset": [
        733,
        770
      ],
      "op": "DUP1",
      "path": "16"
    },
    "965": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        733,
        770
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "966": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        733,
        770
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "967": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        733,
        770
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "969": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        733,
        770
      ],
      "op": "ADD",
      "path": "16"
    },
    "970": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        733,
        770
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "971": {
      "offset": [
        733,
        784
      ],
      "op": "EQ",
      "path": "16"
    },
    "972": {
      "offset": [
        725,
        803
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x408"
    },
    "975": {
      "offset": [
        725,
        803
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "976": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        725,
        803
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "978": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        725,
        803
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "979": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "983": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "985": {
      "op": "SHL"
    },
    "986": {
      "offset": [
        725,
        803
      ],
      "op": "DUP2",
      "path": "16"
    },
    "987": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        725,
        803
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "988": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "990": {
      "offset": [
        725,
        803
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "992": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        725,
        803
      ],
      "op": "DUP3",
      "path": "16"
    },
    "993": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        725,
        803
      ],
      "op": "ADD",
      "path": "16"
    },
    "994": {
      "op": "MSTORE"
    },
    "995": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "997": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "999": {
      "op": "DUP3"
    },
    "1000": {
      "op": "ADD"
    },
    "1001": {
      "op": "MSTORE"
    },
    "1002": {
      "op": "PUSH14",
      "value": "0x92DCC6DEE4E4CAC6E84090C2E6D"
    },
    "1017": {
      "op": "PUSH1",
      "value": "0x93"
    },
    "1019": {
      "op": "SHL"
    },
    "1020": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1022": {
      "op": "DUP3"
    },
    "1023": {
      "op": "ADD"
    },
    "1024": {
      "op": "MSTORE"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1027": {
      "op": "ADD"
    },
    "1028": {
      "offset": [
        725,
        803
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A1"
    },
    "1031": {
      "op": "JUMP"
    },
    "1032": {
      "offset": [
        725,
        803
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1033": {
      "offset": [
        813,
        823
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "1035": {
      "offset": [
        813,
        833
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1036": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        813,
        833
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1037": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        813,
        833
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "1038": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1676,
        1698
      ],
      "op": "DUP5",
      "path": "16",
      "statement": 3
    },
    "1039": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1676,
        1698
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1040": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1702,
        1704
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "1042": {
      "op": "LT"
    },
    "1043": {
      "branch": 7,
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1676,
        1704
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1044": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1668,
        1721
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x44E"
    },
    "1047": {
      "branch": 7,
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1668,
        1721
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1048": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1668,
        1721
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1050": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1668,
        1721
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1051": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1055": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1057": {
      "op": "SHL"
    },
    "1058": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1668,
        1721
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1059": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1668,
        1721
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1060": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1062": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1668,
        1721
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1064": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1668,
        1721
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1065": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1668,
        1721
      ],
      "op": "ADD",
      "path": "16"
    },
    "1066": {
      "op": "MSTORE"
    },
    "1067": {
      "op": "PUSH1",
      "value": "0xC"
    },
    "1069": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1071": {
      "op": "DUP3"
    },
    "1072": {
      "op": "ADD"
    },
    "1073": {
      "op": "MSTORE"
    },
    "1074": {
      "op": "PUSH12",
      "value": "0x6C6F6720746F6F206C6F6E67"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1089": {
      "op": "SHL"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1092": {
      "op": "DUP3"
    },
    "1093": {
      "op": "ADD"
    },
    "1094": {
      "op": "MSTORE"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1097": {
      "op": "ADD"
    },
    "1098": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1668,
        1721
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A1"
    },
    "1101": {
      "op": "JUMP"
    },
    "1102": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1668,
        1721
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1103": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1786,
        1794
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1104": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1780,
        1795
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1105": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1821,
        1836
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "1107": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1815,
        1819
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1109": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1808,
        1837
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1110": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1938,
        1939
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "1112": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1930,
        1936
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1113": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1926,
        1940
      ],
      "op": "MUL",
      "path": "16"
    },
    "1114": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1918,
        1922
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1116": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1908,
        1916
      ],
      "op": "DUP8",
      "path": "16"
    },
    "1117": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1904,
        1923
      ],
      "op": "ADD",
      "path": "16"
    },
    "1118": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1898,
        1924
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1119": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1895,
        1941
      ],
      "op": "OR",
      "path": "16"
    },
    "1120": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1884,
        1892
      ],
      "op": "DUP8",
      "path": "16"
    },
    "1121": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1877,
        1881
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1123": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1871,
        1875
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1125": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1861,
        1882
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1126": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1857,
        1893
      ],
      "op": "ADD",
      "path": "16"
    },
    "1127": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1850,
        1942
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "1128": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1850,
        1942
      ],
      "op": "POP",
      "path": "16"
    },
    "1129": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1515,
        1959
      ],
      "op": "POP",
      "path": "16"
    },
    "1130": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1515,
        1959
      ],
      "op": "POP",
      "path": "16"
    },
    "1131": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1515,
        1959
      ],
      "op": "POP",
      "path": "16"
    },
    "1132": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1515,
        1959
      ],
      "op": "POP",
      "path": "16"
    },
    "1133": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1515,
        1959
      ],
      "op": "POP",
      "path": "16"
    },
    "1134": {
      "fn": "PrivateLog.updateLogEntry",
      "offset": [
        1515,
        1959
      ],
      "op": "POP",
      "path": "16"
    },
    "1135": {
      "fn": "PrivateLog.updateLogEntry",
      "jump": "o",
      "offset": [
        1515,
        1959
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1136": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        857,
        972
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1137": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        913,
        926
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "1139": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        945,
        955
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 4,
      "value": "0x2"
    },
    "1141": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        956,
        964
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1142": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        945,
        965
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1143": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        945,
        965
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1144": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        945,
        965
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1145": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        945,
        965
      ],
      "op": "LT",
      "path": "16"
    },
    "1146": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        945,
        965
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x485"
    },
    "1149": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        945,
        965
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1150": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        945,
        965
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x485"
    },
    "1153": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        945,
        965
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x777"
    },
    "1156": {
      "fn": "PrivateLog.viewLog",
      "jump": "i",
      "offset": [
        945,
        965
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1157": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        945,
        965
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1158": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        945,
        965
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1159": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        945,
        965
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1161": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        945,
        965
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1162": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        945,
        965
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1164": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        945,
        965
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1166": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        945,
        965
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1167": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        945,
        965
      ],
      "op": "ADD",
      "path": "16"
    },
    "1168": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1169": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1170": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x49A"
    },
    "1173": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1174": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x73C"
    },
    "1177": {
      "fn": "PrivateLog.viewLog",
      "jump": "i",
      "offset": [
        938,
        965
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1178": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1179": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1180": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "1182": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "ADD",
      "path": "16"
    },
    "1183": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1185": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1186": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1187": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "DIV",
      "path": "16"
    },
    "1188": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "MUL",
      "path": "16"
    },
    "1189": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1191": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "ADD",
      "path": "16"
    },
    "1192": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1194": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1195": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1196": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1197": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "ADD",
      "path": "16"
    },
    "1198": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1200": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1201": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1202": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1203": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1204": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1205": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1206": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1207": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1208": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1210": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "ADD",
      "path": "16"
    },
    "1211": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1212": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1213": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1214": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4C6"
    },
    "1217": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1218": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x73C"
    },
    "1221": {
      "fn": "PrivateLog.viewLog",
      "jump": "i",
      "offset": [
        938,
        965
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1222": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1223": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1224": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1225": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x513"
    },
    "1228": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1229": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1230": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "1232": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "LT",
      "path": "16"
    },
    "1233": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4E8"
    },
    "1236": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1237": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "1240": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1241": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1242": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1243": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "DIV",
      "path": "16"
    },
    "1244": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "MUL",
      "path": "16"
    },
    "1245": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1246": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1247": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1248": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1250": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "ADD",
      "path": "16"
    },
    "1251": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1252": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x513"
    },
    "1255": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1256": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1257": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1258": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "ADD",
      "path": "16"
    },
    "1259": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1260": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1261": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1263": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1264": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1266": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1268": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1269": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1270": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1271": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1272": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1273": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1274": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1275": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1276": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "1278": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "ADD",
      "path": "16"
    },
    "1279": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1280": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1282": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "ADD",
      "path": "16"
    },
    "1283": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1284": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1285": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "GT",
      "path": "16"
    },
    "1286": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4F6"
    },
    "1289": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1290": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1291": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1292": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "SUB",
      "path": "16"
    },
    "1293": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "1295": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "AND",
      "path": "16"
    },
    "1296": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1297": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "ADD",
      "path": "16"
    },
    "1298": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1299": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1300": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "POP",
      "path": "16"
    },
    "1301": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "POP",
      "path": "16"
    },
    "1302": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "POP",
      "path": "16"
    },
    "1303": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "POP",
      "path": "16"
    },
    "1304": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "POP",
      "path": "16"
    },
    "1305": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1306": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        938,
        965
      ],
      "op": "POP",
      "path": "16"
    },
    "1307": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        857,
        972
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1308": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        857,
        972
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1309": {
      "fn": "PrivateLog.viewLog",
      "offset": [
        857,
        972
      ],
      "op": "POP",
      "path": "16"
    },
    "1310": {
      "fn": "PrivateLog.viewLog",
      "jump": "o",
      "offset": [
        857,
        972
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1311": {
      "op": "JUMPDEST"
    },
    "1312": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1314": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1316": {
      "op": "DUP3"
    },
    "1317": {
      "op": "DUP5"
    },
    "1318": {
      "op": "SUB"
    },
    "1319": {
      "op": "SLT"
    },
    "1320": {
      "op": "ISZERO"
    },
    "1321": {
      "op": "PUSH2",
      "value": "0x531"
    },
    "1324": {
      "op": "JUMPI"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1327": {
      "op": "DUP1"
    },
    "1328": {
      "op": "REVERT"
    },
    "1329": {
      "op": "JUMPDEST"
    },
    "1330": {
      "op": "POP"
    },
    "1331": {
      "op": "CALLDATALOAD"
    },
    "1332": {
      "op": "SWAP2"
    },
    "1333": {
      "op": "SWAP1"
    },
    "1334": {
      "op": "POP"
    },
    "1335": {
      "jump": "o",
      "op": "JUMP"
    },
    "1336": {
      "op": "JUMPDEST"
    },
    "1337": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1342": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1344": {
      "op": "SHL"
    },
    "1345": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1347": {
      "op": "MSTORE"
    },
    "1348": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "1350": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1352": {
      "op": "MSTORE"
    },
    "1353": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1355": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1357": {
      "op": "REVERT"
    },
    "1358": {
      "op": "JUMPDEST"
    },
    "1359": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1361": {
      "op": "DUP3"
    },
    "1362": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1364": {
      "op": "DUP4"
    },
    "1365": {
      "op": "ADD"
    },
    "1366": {
      "op": "SLT"
    },
    "1367": {
      "op": "PUSH2",
      "value": "0x55F"
    },
    "1370": {
      "op": "JUMPI"
    },
    "1371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1373": {
      "op": "DUP1"
    },
    "1374": {
      "op": "REVERT"
    },
    "1375": {
      "op": "JUMPDEST"
    },
    "1376": {
      "op": "DUP2"
    },
    "1377": {
      "op": "CALLDATALOAD"
    },
    "1378": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1387": {
      "op": "DUP1"
    },
    "1388": {
      "op": "DUP3"
    },
    "1389": {
      "op": "GT"
    },
    "1390": {
      "op": "ISZERO"
    },
    "1391": {
      "op": "PUSH2",
      "value": "0x57A"
    },
    "1394": {
      "op": "JUMPI"
    },
    "1395": {
      "op": "PUSH2",
      "value": "0x57A"
    },
    "1398": {
      "op": "PUSH2",
      "value": "0x538"
    },
    "1401": {
      "jump": "i",
      "op": "JUMP"
    },
    "1402": {
      "op": "JUMPDEST"
    },
    "1403": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1405": {
      "op": "MLOAD"
    },
    "1406": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1408": {
      "op": "DUP4"
    },
    "1409": {
      "op": "ADD"
    },
    "1410": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1412": {
      "op": "NOT"
    },
    "1413": {
      "op": "SWAP1"
    },
    "1414": {
      "op": "DUP2"
    },
    "1415": {
      "op": "AND"
    },
    "1416": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "1418": {
      "op": "ADD"
    },
    "1419": {
      "op": "AND"
    },
    "1420": {
      "op": "DUP2"
    },
    "1421": {
      "op": "ADD"
    },
    "1422": {
      "op": "SWAP1"
    },
    "1423": {
      "op": "DUP3"
    },
    "1424": {
      "op": "DUP3"
    },
    "1425": {
      "op": "GT"
    },
    "1426": {
      "op": "DUP2"
    },
    "1427": {
      "op": "DUP4"
    },
    "1428": {
      "op": "LT"
    },
    "1429": {
      "op": "OR"
    },
    "1430": {
      "op": "ISZERO"
    },
    "1431": {
      "op": "PUSH2",
      "value": "0x5A2"
    },
    "1434": {
      "op": "JUMPI"
    },
    "1435": {
      "op": "PUSH2",
      "value": "0x5A2"
    },
    "1438": {
      "op": "PUSH2",
      "value": "0x538"
    },
    "1441": {
      "jump": "i",
      "op": "JUMP"
    },
    "1442": {
      "op": "JUMPDEST"
    },
    "1443": {
      "op": "DUP2"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1446": {
      "op": "MSTORE"
    },
    "1447": {
      "op": "DUP4"
    },
    "1448": {
      "op": "DUP2"
    },
    "1449": {
      "op": "MSTORE"
    },
    "1450": {
      "op": "DUP7"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1453": {
      "op": "DUP6"
    },
    "1454": {
      "op": "DUP9"
    },
    "1455": {
      "op": "ADD"
    },
    "1456": {
      "op": "ADD"
    },
    "1457": {
      "op": "GT"
    },
    "1458": {
      "op": "ISZERO"
    },
    "1459": {
      "op": "PUSH2",
      "value": "0x5BB"
    },
    "1462": {
      "op": "JUMPI"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1465": {
      "op": "DUP1"
    },
    "1466": {
      "op": "REVERT"
    },
    "1467": {
      "op": "JUMPDEST"
    },
    "1468": {
      "op": "DUP4"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1471": {
      "op": "DUP8"
    },
    "1472": {
      "op": "ADD"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1475": {
      "op": "DUP4"
    },
    "1476": {
      "op": "ADD"
    },
    "1477": {
      "op": "CALLDATACOPY"
    },
    "1478": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1480": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1482": {
      "op": "DUP6"
    },
    "1483": {
      "op": "DUP4"
    },
    "1484": {
      "op": "ADD"
    },
    "1485": {
      "op": "ADD"
    },
    "1486": {
      "op": "MSTORE"
    },
    "1487": {
      "op": "DUP1"
    },
    "1488": {
      "op": "SWAP5"
    },
    "1489": {
      "op": "POP"
    },
    "1490": {
      "op": "POP"
    },
    "1491": {
      "op": "POP"
    },
    "1492": {
      "op": "POP"
    },
    "1493": {
      "op": "POP"
    },
    "1494": {
      "op": "SWAP3"
    },
    "1495": {
      "op": "SWAP2"
    },
    "1496": {
      "op": "POP"
    },
    "1497": {
      "op": "POP"
    },
    "1498": {
      "jump": "o",
      "op": "JUMP"
    },
    "1499": {
      "op": "JUMPDEST"
    },
    "1500": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1502": {
      "op": "DUP1"
    },
    "1503": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1505": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1507": {
      "op": "DUP5"
    },
    "1508": {
      "op": "DUP7"
    },
    "1509": {
      "op": "SUB"
    },
    "1510": {
      "op": "SLT"
    },
    "1511": {
      "op": "ISZERO"
    },
    "1512": {
      "op": "PUSH2",
      "value": "0x5F0"
    },
    "1515": {
      "op": "JUMPI"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1518": {
      "op": "DUP1"
    },
    "1519": {
      "op": "REVERT"
    },
    "1520": {
      "op": "JUMPDEST"
    },
    "1521": {
      "op": "DUP4"
    },
    "1522": {
      "op": "CALLDATALOAD"
    },
    "1523": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1532": {
      "op": "DUP1"
    },
    "1533": {
      "op": "DUP3"
    },
    "1534": {
      "op": "GT"
    },
    "1535": {
      "op": "ISZERO"
    },
    "1536": {
      "op": "PUSH2",
      "value": "0x608"
    },
    "1539": {
      "op": "JUMPI"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1542": {
      "op": "DUP1"
    },
    "1543": {
      "op": "REVERT"
    },
    "1544": {
      "op": "JUMPDEST"
    },
    "1545": {
      "op": "PUSH2",
      "value": "0x614"
    },
    "1548": {
      "op": "DUP8"
    },
    "1549": {
      "op": "DUP4"
    },
    "1550": {
      "op": "DUP9"
    },
    "1551": {
      "op": "ADD"
    },
    "1552": {
      "op": "PUSH2",
      "value": "0x54E"
    },
    "1555": {
      "jump": "i",
      "op": "JUMP"
    },
    "1556": {
      "op": "JUMPDEST"
    },
    "1557": {
      "op": "SWAP5"
    },
    "1558": {
      "op": "POP"
    },
    "1559": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1561": {
      "op": "DUP7"
    },
    "1562": {
      "op": "ADD"
    },
    "1563": {
      "op": "CALLDATALOAD"
    },
    "1564": {
      "op": "SWAP2"
    },
    "1565": {
      "op": "POP"
    },
    "1566": {
      "op": "DUP1"
    },
    "1567": {
      "op": "DUP3"
    },
    "1568": {
      "op": "GT"
    },
    "1569": {
      "op": "ISZERO"
    },
    "1570": {
      "op": "PUSH2",
      "value": "0x62A"
    },
    "1573": {
      "op": "JUMPI"
    },
    "1574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1576": {
      "op": "DUP1"
    },
    "1577": {
      "op": "REVERT"
    },
    "1578": {
      "op": "JUMPDEST"
    },
    "1579": {
      "op": "POP"
    },
    "1580": {
      "op": "PUSH2",
      "value": "0x637"
    },
    "1583": {
      "op": "DUP7"
    },
    "1584": {
      "op": "DUP3"
    },
    "1585": {
      "op": "DUP8"
    },
    "1586": {
      "op": "ADD"
    },
    "1587": {
      "op": "PUSH2",
      "value": "0x54E"
    },
    "1590": {
      "jump": "i",
      "op": "JUMP"
    },
    "1591": {
      "op": "JUMPDEST"
    },
    "1592": {
      "op": "SWAP3"
    },
    "1593": {
      "op": "POP"
    },
    "1594": {
      "op": "POP"
    },
    "1595": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1597": {
      "op": "DUP5"
    },
    "1598": {
      "op": "ADD"
    },
    "1599": {
      "op": "CALLDATALOAD"
    },
    "1600": {
      "op": "SWAP1"
    },
    "1601": {
      "op": "POP"
    },
    "1602": {
      "op": "SWAP3"
    },
    "1603": {
      "op": "POP"
    },
    "1604": {
      "op": "SWAP3"
    },
    "1605": {
      "op": "POP"
    },
    "1606": {
      "op": "SWAP3"
    },
    "1607": {
      "jump": "o",
      "op": "JUMP"
    },
    "1608": {
      "op": "JUMPDEST"
    },
    "1609": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1611": {
      "op": "JUMPDEST"
    },
    "1612": {
      "op": "DUP4"
    },
    "1613": {
      "op": "DUP2"
    },
    "1614": {
      "op": "LT"
    },
    "1615": {
      "op": "ISZERO"
    },
    "1616": {
      "op": "PUSH2",
      "value": "0x663"
    },
    "1619": {
      "op": "JUMPI"
    },
    "1620": {
      "op": "DUP2"
    },
    "1621": {
      "op": "DUP2"
    },
    "1622": {
      "op": "ADD"
    },
    "1623": {
      "op": "MLOAD"
    },
    "1624": {
      "op": "DUP4"
    },
    "1625": {
      "op": "DUP3"
    },
    "1626": {
      "op": "ADD"
    },
    "1627": {
      "op": "MSTORE"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1630": {
      "op": "ADD"
    },
    "1631": {
      "op": "PUSH2",
      "value": "0x64B"
    },
    "1634": {
      "op": "JUMP"
    },
    "1635": {
      "op": "JUMPDEST"
    },
    "1636": {
      "op": "DUP4"
    },
    "1637": {
      "op": "DUP2"
    },
    "1638": {
      "op": "GT"
    },
    "1639": {
      "op": "ISZERO"
    },
    "1640": {
      "op": "PUSH2",
      "value": "0x672"
    },
    "1643": {
      "op": "JUMPI"
    },
    "1644": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1646": {
      "op": "DUP5"
    },
    "1647": {
      "op": "DUP5"
    },
    "1648": {
      "op": "ADD"
    },
    "1649": {
      "op": "MSTORE"
    },
    "1650": {
      "op": "JUMPDEST"
    },
    "1651": {
      "op": "POP"
    },
    "1652": {
      "op": "POP"
    },
    "1653": {
      "op": "POP"
    },
    "1654": {
      "op": "POP"
    },
    "1655": {
      "jump": "o",
      "op": "JUMP"
    },
    "1656": {
      "op": "JUMPDEST"
    },
    "1657": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1659": {
      "op": "DUP2"
    },
    "1660": {
      "op": "MSTORE"
    },
    "1661": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1663": {
      "op": "DUP3"
    },
    "1664": {
      "op": "MLOAD"
    },
    "1665": {
      "op": "DUP1"
    },
    "1666": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1668": {
      "op": "DUP5"
    },
    "1669": {
      "op": "ADD"
    },
    "1670": {
      "op": "MSTORE"
    },
    "1671": {
      "op": "PUSH2",
      "value": "0x697"
    },
    "1674": {
      "op": "DUP2"
    },
    "1675": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1677": {
      "op": "DUP6"
    },
    "1678": {
      "op": "ADD"
    },
    "1679": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1681": {
      "op": "DUP8"
    },
    "1682": {
      "op": "ADD"
    },
    "1683": {
      "op": "PUSH2",
      "value": "0x648"
    },
    "1686": {
      "jump": "i",
      "op": "JUMP"
    },
    "1687": {
      "op": "JUMPDEST"
    },
    "1688": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1690": {
      "op": "ADD"
    },
    "1691": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1693": {
      "op": "NOT"
    },
    "1694": {
      "op": "AND"
    },
    "1695": {
      "op": "SWAP2"
    },
    "1696": {
      "op": "SWAP1"
    },
    "1697": {
      "op": "SWAP2"
    },
    "1698": {
      "op": "ADD"
    },
    "1699": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1701": {
      "op": "ADD"
    },
    "1702": {
      "op": "SWAP3"
    },
    "1703": {
      "op": "SWAP2"
    },
    "1704": {
      "op": "POP"
    },
    "1705": {
      "op": "POP"
    },
    "1706": {
      "jump": "o",
      "op": "JUMP"
    },
    "1707": {
      "op": "JUMPDEST"
    },
    "1708": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1710": {
      "op": "DUP1"
    },
    "1711": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1713": {
      "op": "DUP1"
    },
    "1714": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1716": {
      "op": "DUP6"
    },
    "1717": {
      "op": "DUP8"
    },
    "1718": {
      "op": "SUB"
    },
    "1719": {
      "op": "SLT"
    },
    "1720": {
      "op": "ISZERO"
    },
    "1721": {
      "op": "PUSH2",
      "value": "0x6C1"
    },
    "1724": {
      "op": "JUMPI"
    },
    "1725": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1727": {
      "op": "DUP1"
    },
    "1728": {
      "op": "REVERT"
    },
    "1729": {
      "op": "JUMPDEST"
    },
    "1730": {
      "op": "DUP5"
    },
    "1731": {
      "op": "CALLDATALOAD"
    },
    "1732": {
      "op": "SWAP4"
    },
    "1733": {
      "op": "POP"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1736": {
      "op": "DUP6"
    },
    "1737": {
      "op": "ADD"
    },
    "1738": {
      "op": "CALLDATALOAD"
    },
    "1739": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1748": {
      "op": "DUP1"
    },
    "1749": {
      "op": "DUP3"
    },
    "1750": {
      "op": "GT"
    },
    "1751": {
      "op": "ISZERO"
    },
    "1752": {
      "op": "PUSH2",
      "value": "0x6E0"
    },
    "1755": {
      "op": "JUMPI"
    },
    "1756": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1758": {
      "op": "DUP1"
    },
    "1759": {
      "op": "REVERT"
    },
    "1760": {
      "op": "JUMPDEST"
    },
    "1761": {
      "op": "PUSH2",
      "value": "0x6EC"
    },
    "1764": {
      "op": "DUP9"
    },
    "1765": {
      "op": "DUP4"
    },
    "1766": {
      "op": "DUP10"
    },
    "1767": {
      "op": "ADD"
    },
    "1768": {
      "op": "PUSH2",
      "value": "0x54E"
    },
    "1771": {
      "jump": "i",
      "op": "JUMP"
    },
    "1772": {
      "op": "JUMPDEST"
    },
    "1773": {
      "op": "SWAP5"
    },
    "1774": {
      "op": "POP"
    },
    "1775": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1777": {
      "op": "DUP8"
    },
    "1778": {
      "op": "ADD"
    },
    "1779": {
      "op": "CALLDATALOAD"
    },
    "1780": {
      "op": "SWAP2"
    },
    "1781": {
      "op": "POP"
    },
    "1782": {
      "op": "DUP1"
    },
    "1783": {
      "op": "DUP3"
    },
    "1784": {
      "op": "GT"
    },
    "1785": {
      "op": "ISZERO"
    },
    "1786": {
      "op": "PUSH2",
      "value": "0x702"
    },
    "1789": {
      "op": "JUMPI"
    },
    "1790": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1792": {
      "op": "DUP1"
    },
    "1793": {
      "op": "REVERT"
    },
    "1794": {
      "op": "JUMPDEST"
    },
    "1795": {
      "op": "POP"
    },
    "1796": {
      "op": "PUSH2",
      "value": "0x70F"
    },
    "1799": {
      "op": "DUP8"
    },
    "1800": {
      "op": "DUP3"
    },
    "1801": {
      "op": "DUP9"
    },
    "1802": {
      "op": "ADD"
    },
    "1803": {
      "op": "PUSH2",
      "value": "0x54E"
    },
    "1806": {
      "jump": "i",
      "op": "JUMP"
    },
    "1807": {
      "op": "JUMPDEST"
    },
    "1808": {
      "op": "SWAP5"
    },
    "1809": {
      "op": "SWAP8"
    },
    "1810": {
      "op": "SWAP4"
    },
    "1811": {
      "op": "SWAP7"
    },
    "1812": {
      "op": "POP"
    },
    "1813": {
      "op": "SWAP4"
    },
    "1814": {
      "op": "SWAP5"
    },
    "1815": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1817": {
      "op": "ADD"
    },
    "1818": {
      "op": "CALLDATALOAD"
    },
    "1819": {
      "op": "SWAP4"
    },
    "1820": {
      "op": "POP"
    },
    "1821": {
      "op": "POP"
    },
    "1822": {
      "op": "POP"
    },
    "1823": {
      "jump": "o",
      "op": "JUMP"
    },
    "1824": {
      "op": "JUMPDEST"
    },
    "1825": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1827": {
      "op": "DUP3"
    },
    "1828": {
      "op": "MLOAD"
    },
    "1829": {
      "op": "PUSH2",
      "value": "0x732"
    },
    "1832": {
      "op": "DUP2"
    },
    "1833": {
      "op": "DUP5"
    },
    "1834": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1836": {
      "op": "DUP8"
    },
    "1837": {
      "op": "ADD"
    },
    "1838": {
      "op": "PUSH2",
      "value": "0x648"
    },
    "1841": {
      "jump": "i",
      "op": "JUMP"
    },
    "1842": {
      "op": "JUMPDEST"
    },
    "1843": {
      "op": "SWAP2"
    },
    "1844": {
      "op": "SWAP1"
    },
    "1845": {
      "op": "SWAP2"
    },
    "1846": {
      "op": "ADD"
    },
    "1847": {
      "op": "SWAP3"
    },
    "1848": {
      "op": "SWAP2"
    },
    "1849": {
      "op": "POP"
    },
    "1850": {
      "op": "POP"
    },
    "1851": {
      "jump": "o",
      "op": "JUMP"
    },
    "1852": {
      "op": "JUMPDEST"
    },
    "1853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1855": {
      "op": "DUP2"
    },
    "1856": {
      "op": "DUP2"
    },
    "1857": {
      "op": "SHR"
    },
    "1858": {
      "op": "SWAP1"
    },
    "1859": {
      "op": "DUP3"
    },
    "1860": {
      "op": "AND"
    },
    "1861": {
      "op": "DUP1"
    },
    "1862": {
      "op": "PUSH2",
      "value": "0x750"
    },
    "1865": {
      "op": "JUMPI"
    },
    "1866": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "1868": {
      "op": "DUP3"
    },
    "1869": {
      "op": "AND"
    },
    "1870": {
      "op": "SWAP2"
    },
    "1871": {
      "op": "POP"
    },
    "1872": {
      "op": "JUMPDEST"
    },
    "1873": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1875": {
      "op": "DUP3"
    },
    "1876": {
      "op": "LT"
    },
    "1877": {
      "op": "DUP2"
    },
    "1878": {
      "op": "EQ"
    },
    "1879": {
      "op": "ISZERO"
    },
    "1880": {
      "op": "PUSH2",
      "value": "0x771"
    },
    "1883": {
      "op": "JUMPI"
    },
    "1884": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1889": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1891": {
      "op": "SHL"
    },
    "1892": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1894": {
      "op": "MSTORE"
    },
    "1895": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1897": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1899": {
      "op": "MSTORE"
    },
    "1900": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1902": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1904": {
      "op": "REVERT"
    },
    "1905": {
      "op": "JUMPDEST"
    },
    "1906": {
      "op": "POP"
    },
    "1907": {
      "op": "SWAP2"
    },
    "1908": {
      "op": "SWAP1"
    },
    "1909": {
      "op": "POP"
    },
    "1910": {
      "jump": "o",
      "op": "JUMP"
    },
    "1911": {
      "op": "JUMPDEST"
    },
    "1912": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1919": {
      "op": "SHL"
    },
    "1920": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1922": {
      "op": "MSTORE"
    },
    "1923": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "1925": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1927": {
      "op": "MSTORE"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1932": {
      "op": "REVERT"
    }
  },
  "sha1": "29bd6c62959d2a0470d89fefe12b4da0a3ecc692",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @title Private Log\n * @author Blue Alder (https://duc.tf)\n **/\n\nimport \"OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/proxy/utils/Initializable.sol\";\n\n\ncontract PrivateLog is Initializable {\n\n    bytes32 public secretHash;\n    string[] public logEntries;\n\n    constructor() {\n        secretHash = 0xDEADDEADDEADDEADDEADDEADDEADDEADDEADDEADDEADDEADDEADDEADDEADDEAD;\n    }\n\n    function init(bytes32 _secretHash) payable public initializer {\n        require(secretHash != 0xDEADDEADDEADDEADDEADDEADDEADDEADDEADDEADDEADDEADDEADDEADDEADDEAD);\n        secretHash = _secretHash;\n    }\n\n    modifier hasSecret(string memory password, bytes32 newHash) {\n        require(keccak256(abi.encodePacked(password)) == secretHash, \"Incorrect Hash\");\n        secretHash = newHash;\n        _;\n    }\n\n    function viewLog(uint256 logIndex) view public returns (string memory) {\n        return logEntries[logIndex];\n    } \n\n    function createLogEntry(string memory logEntry, string memory password, bytes32 newHash) public hasSecret(password, newHash) {\n        require(bytes(logEntry).length <= 31, \"log too long\");   \n        \n        assembly {\n            mstore(0x00, logEntries.slot)\n            let length := sload(logEntries.slot)\n            let logLength := mload(logEntry)\n            sstore(add(keccak256(0x00, 0x20), length), or(mload(add(logEntry, 0x20)), mul(logLength, 2)))\n            sstore(logEntries.slot, add(length, 1))\n        }\n    }\n\n    function updateLogEntry(uint256 logIndex, string memory logEntry, string memory password, bytes32 newHash) public hasSecret(password, newHash) {\n        require(bytes(logEntry).length <= 31, \"log too long\");   \n        \n        assembly {\n            let length := mload(logEntry)\n            mstore(0x00, logEntries.slot)\n            sstore(add(keccak256(0x00, 0x20), logIndex), or(mload(add(logEntry, 0x20)), mul(length, 2)))\n        }\n\n    }\n}",
  "sourceMap": "223:1738:16:-:0;;;331:110;;;;;;;;;-1:-1:-1;368:66:16;355:10;:79;223:1738;;;;;;",
  "sourcePath": "contracts/PrivateLog/PrivateLog.sol",
  "type": "contract"
}
